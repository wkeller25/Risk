document.addEventListener('DOMContentLoaded', () => {
    const currentDate = new Date();
    let selectedDate;
    let events = {};
    let categories = {
        work: '#ff6666',
        personal: '#66cc66',
        other: '#6666ff'
    };
    
    const calendarBody = document.getElementById('calendarBody');
    const monthYearLabel = document.getElementById('monthYear');
    const eventModal = document.getElementById('eventModal');
    const categoryModal = document.getElementById('categoryModal');
    const closeEventBtn = document.querySelector('.close');
    const closeCategoryBtn = document.querySelector('.closeCategory');
    const addEventBtn = document.getElementById('addEventBtn');
    const addCategoryBtn = document.getElementById('addCategoryBtn');
    const prevMonthBtn = document.getElementById('prevMonth');
    const nextMonthBtn = document.getElementById('nextMonth');
    const createCategoryBtn = document.getElementById('createCategoryBtn');

    let displayedDate = new Date();

    // Close modals
    closeEventBtn.onclick = () => { eventModal.style.display = 'none'; };
    closeCategoryBtn.onclick = () => { categoryModal.style.display = 'none'; };

    // Display current date marker
    const displayCurrentDayMarker = (dayElement) => {
        const today = new Date();
        if (displayedDate.getMonth() === today.getMonth() && displayedDate.getFullYear() === today.getFullYear() && dayElement.dataset.day == today.getDate()) {
            dayElement.classList.add('today');
        }
    };

    // Populate calendar based on month and year
    const populateCalendar = (date) => {
        calendarBody.innerHTML = '';
        monthYearLabel.innerText = date.toLocaleDateString('en-us', { month: 'long', year: 'numeric' });
        const firstDay = new Date(date.getFullYear(), date.getMonth(), 1).getDay();
        const daysInMonth = new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate();
        let day = 1;

        for (let row = 0; row < 6; row++) {
            const tr = document.createElement('tr');
            for (let col = 0; col < 7; col++) {
                const td = document.createElement('td');
                if (row === 0 && col < firstDay || day > daysInMonth) {
                    td.classList.add('empty');
                } else {
                    td.classList.add('day');
                    td.innerText = day;
                    td.dataset.day = day;

                    displayCurrentDayMarker(td);

                    td.onclick = () => {
                        selectedDate = new Date(date.getFullYear(), date.getMonth(), day).toISOString().split('T')[0];
                        document.getElementById('eventDay').innerText = selectedDate;
                        eventModal.style.display = 'block';
                    };

                    day++;
                }
                tr.appendChild(td);
            }
            calendarBody.appendChild(tr);
        }
    };

    populateCalendar(displayedDate);

    prevMonthBtn.onclick = () => {
        displayedDate.setMonth(displayedDate.getMonth() - 1);
        populateCalendar(displayedDate);
    };

    nextMonthBtn.onclick = () => {
        displayedDate.setMonth(displayedDate.getMonth() + 1);
        populateCalendar(displayedDate);
    };

    // Add new category
    createCategoryBtn.onclick = () => { categoryModal.style.display = 'block'; };
    
    addCategoryBtn.onclick = () => {
        const categoryName = document.getElementById('newCategoryName').value;
        const categoryColor = document.getElementById('newCategoryColor').value;
        if (categoryName) {
            categories[categoryName] = categoryColor;
            const eventTypeSelect = document.getElementById('eventType');
            const newOption = document.createElement('option');
            newOption.value = categoryName;
            newOption.innerText = categoryName;
            newOption.style.color = categoryColor;
            eventTypeSelect.appendChild(newOption);
           
